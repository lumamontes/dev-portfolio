---
import Layout from '../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../../utils/lang';
import { languages } from '../../data/ui';
import BentoGrid from '../../components/BentoGrid.astro';

export function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({ params: { lang } }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get current year and time for dynamic content
const currentYear = new Date().getFullYear();
const currentTime = new Date().toLocaleTimeString('en-US', { 
  hour12: false, 
  hour: '2-digit', 
  minute: '2-digit' 
});

const bentoItems = [
  {
    title: t('presentation.title'),
    description: t('presentation.description'),
    icon: '‚óâ',
    link: '#',
    size: 'large',
    theme: 'terminal',
    customContent: `
      <div class="space-y-4">
        <div class="flex items-center gap-2 font-mono text-xs opacity-60">
          <span class="ml-auto">${currentTime}</span>
        </div>
        <div class="space-y-2">
          <p class="text-base leading-relaxed opacity-90">
            ${t('presentation.description')}
          </p>
        </div>
        <div class="flex items-center gap-2 font-mono text-xs opacity-60">
          <img src="https://avatars.githubusercontent.com/u/60052718?v=4" alt="Developer coding workspace" class="w-full h-full object-cover transition-transform duration-300 hover:scale-105" loading="lazy" />
        </div>
      </div>
    `
  },
  {
    title: t('about.me'),
    description: t('about.me.description'),
    icon: '‚ö°',
    link: '#',
    size: 'medium',
    theme: 'default',
    customContent: `
      <div class="relative h-full flex flex-col">
       <p class="text-sm opacity-75 leading-relaxed">
        ${t('about.me.description')}
       </p>
        <div class="flex-1 rounded-lg overflow-hidden bg-zinc-800/50 border border-zinc-700/50">
          <img 
            src='/me.gif' 
            alt='Developer coding workspace' 
            class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
            loading="lazy"
          />
        </div>
      </div>
    `
  },
  {
    title: t('nav.projects'),
    description: t('projects.description'),
    icon: '‚óà',
    link: '/projects',
    size: 'small',
    theme: 'pixel',
    customContent: `
      <div class="space-y-3 h-full flex flex-col">
        <p class="text-sm opacity-75 leading-relaxed flex-1">
          ${t('projects.description')}
        </p>
      </div>
    `
  },
  //Radio
  {
    title: t('radio.title'),
    description: t('radio.description'),
    size: 'medium',
    link: '#',
  },
  // About (medium)
  {
    title: t('nav.experience'),
    description: t('experience.small_description'),
    icon: '‚ó¶',
    link: '/about',
    size: 'small',
    theme: 'default',
  },

  // Coffee break visual (small)
  {
    title: t('coffe.title'),
    description: t('coffe.description'),
    icon: '‚òï',
    link: '#',
    size: 'small',
    theme: 'pixel',
    customContent: `
      <div class="relative h-full flex flex-col">
        <div class="flex-1 rounded-lg overflow-hidden bg-fuchsia-900/20 border border-fuchsia-400/30">
          <img 
            src='/coffe.gif' 
            alt='Coffee break moment' 
            class="w-full h-full object-cover"
            loading="lazy"
          />
        </div>
      </div>
    `
  },

  // Blog/Posts (medium)
  {
    title: t('nav.blog'),
    description: t('blog.description'),
    icon: '‚óä',
    link: '/posts',
    size: 'medium',
    theme: 'crt',
    customContent: `
      <div class="space-y-4 h-full flex flex-col">
        <p class="text-sm opacity-75 leading-relaxed">
          ${t('blog.description')}
        </p>
      </div>
    `
  },

  // Contact (small)
  {
    title: t('nav.contact'),
    description: 'Get in touch',
    icon: '‚óà',
    link: '/contact',
    size: 'small',
    theme: 'pixel',
    customContent: `
      <div class="space-y-3 h-full flex flex-col">
        ${t('about.connect.title')}
      </div>
    `
  },

  // Currently Learning (small)
  {
    title: t('currently.learning'),
    description: t('currently.learning.description'),
    icon: 'üìö',
    link: '#',
    size: 'small',
    theme: 'terminal',
    customContent: `
      <div class="space-y-3 h-full flex flex-col">
        <ul class="list-disc list-inside">
          <li>React Native</li>
          <li>Swift</li>
          <li>Inertia</li>
        </ul>
      </div>
    `
  },
  
];
---

<Layout title={t('presentation.title')} description={t('presentation.description')}>
  <!-- Enhanced background with animated elements -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none">
    <div class="absolute inset-0 bg-gradient-to-br from-slate-900 via-zinc-900 to-black"></div>
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_30%_80%,rgba(34,197,94,0.05),transparent_50%)]"></div>
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_70%_20%,rgba(168,85,247,0.05),transparent_50%)]"></div>
    <div class="scanlines"></div>
    
    <!-- Floating particles -->
    <div class="floating-particles">
      <div class="particle particle-1"></div>
      <div class="particle particle-2"></div>
      <div class="particle particle-3"></div>
    </div>
  </div>

  <main class="relative z-10 min-h-screen">
    <section class="px-4 pb-12">
      <BentoGrid items={bentoItems} />
    </section>

    <!-- Footer -->
    <footer class="px-4 py-6 border-t border-zinc-800/30">
      <div class="max-w-6xl mx-auto">
        <div class="flex items-center justify-between text-xs text-zinc-500">
          <div class="font-mono">
            ¬© ${currentYear} Luma Montes ‚Ä¢ Built with ‚ù§Ô∏è and ‚òï
          </div>
          <div class="flex items-center gap-4">
            <a href="https://github.com" class="hover:text-zinc-300 transition-colors">GitHub</a>
            <a href="https://linkedin.com" class="hover:text-zinc-300 transition-colors">LinkedIn</a>
          </div>
        </div>
      </div>
    </footer>
  </main>
</Layout>

<style>
  /* Enhanced background */
  :global(body) {
    margin: 0;
    padding: 0;
    background: #0a0a0a;
    overflow-x: hidden;
  }

  /* Animated scanlines */
  .scanlines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.01) 2px,
      rgba(255, 255, 255, 0.01) 4px
    );
    pointer-events: none;
    opacity: 0.6;
    animation: scanlines 8s linear infinite;
  }

  @keyframes scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(4px); }
  }

  /* Floating particles */
  .floating-particles {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    animation: float 20s infinite linear;
  }

  .particle-1 {
    width: 4px;
    height: 4px;
    top: 20%;
    left: 10%;
    animation-delay: 0s;
    animation-duration: 25s;
  }

  .particle-2 {
    width: 2px;
    height: 2px;
    top: 60%;
    right: 20%;
    animation-delay: -10s;
    animation-duration: 30s;
  }

  .particle-3 {
    width: 3px;
    height: 3px;
    bottom: 30%;
    left: 80%;
    animation-delay: -20s;
    animation-duration: 35s;
  }

  @keyframes float {
    0% {
      transform: translateY(100vh) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
      opacity: 0;
    }
  }

  /* Pulse animation */
  @keyframes pulse-glow {
    0%, 100% { opacity: 0.4; }
    50% { opacity: 1; }
  }

  .animate-pulse {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* Smooth scrolling */
  :global(html) {
    scroll-behavior: smooth;
  }

  /* Enhanced scrollbar */
  :global(::-webkit-scrollbar) {
    width: 8px;
  }

  :global(::-webkit-scrollbar-track) {
    background: rgba(0, 0, 0, 0.1);
  }

  :global(::-webkit-scrollbar-thumb) {
    background: linear-gradient(to bottom, rgba(52, 211, 153, 0.3), rgba(168, 85, 247, 0.3));
    border-radius: 4px;
  }

  :global(::-webkit-scrollbar-thumb:hover) {
    background: linear-gradient(to bottom, rgba(52, 211, 153, 0.5), rgba(168, 85, 247, 0.5));
  }

  /* Mobile optimizations */
  @media (max-width: 640px) {
    header {
      padding: 1rem;
    }
    
    main section {
      padding: 0 1rem 3rem;
    }
    
    .floating-particles {
      display: none;
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .scanlines,
    .floating-particles {
      display: none;
    }
    
    .animate-pulse {
      animation: none;
    }
    
    * {
      animation: none !important;
      transition: none !important;
    }
  }

  /* Focus improvements */
  :global(:focus-visible) {
    outline: 2px solid rgba(52, 211, 153, 0.5);
    outline-offset: 2px;
    border-radius: 4px;
  }
</style>