---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";
import { getLangFromUrl } from "@/utils/lang";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const paths = posts.map((post) => {
    const [lang, ...slug] = post.slug.split("/");
    return { params: { lang, slug: slug.join("/") || undefined }, props: post };
  });
  return paths;
}

const post = Astro.props;
const { Content } = await post.render();
const lang = getLangFromUrl(Astro.url);

const wordsPerMinute = 200;
const wordCount = post.body?.split(/\s+/).length || 0;
const readingTime = Math.ceil(wordCount / wordsPerMinute);
---

<Layout 
  title={post.data.title} 
  description={post.data.description}
>
  <!-- Background Effects -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none">
    <div class="absolute inset-0 bg-gradient-to-br from-slate-900 via-zinc-900 to-black"></div>
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_20%_80%,rgba(34,197,94,0.03),transparent_50%)]"></div>
    <div class="scanlines"></div>
  </div>

  <main class="relative z-10 min-h-screen">
    <!-- Article Header -->
    <header class="px-4 py-12 border-b border-zinc-800/50">
      <div class="max-w-2xl mx-auto">
        <div class="space-y-6">
          <div class="space-y-4">
            <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-white leading-tight">
              {post.data.title}
            </h1>
            
            {post.data.description && (
              <p class="text-lg text-zinc-300 leading-relaxed max-w-3xl">
                {post.data.description}
              </p>
            )}
          </div>

          <div class="flex flex-wrap items-center gap-6 text-sm text-zinc-400">
            <div class="flex items-center gap-2">
              <span class="w-8 h-8 bg-gradient-to-br from-emerald-400 to-blue-500 rounded-full flex items-center justify-center">
                <span class="text-white font-bold text-xs">LM</span>
              </span>
              <span>Luma Montes</span>
            </div>
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <time datetime={post.data.publishedAt.toISOString()}>
                {formatDate(post.data.publishedAt)}
              </time>
            </div>
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span>{readingTime} min read</span>
            </div>
            {wordCount > 0 && (
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <span>{wordCount.toLocaleString()} words</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </header>

    <div class="py-12 flex items-center justify-center">
      <article
      class="prose dark:prose-invert
      prose-h1:font-bold prose-h1:text-xl
      prose-a:text-blue-600 prose-p:text-justify prose-img:rounded-xl
      prose-headings:underline w-full h-full" 
      >
          <Content />
      </article>
    </div>
  </main>
</Layout>

<style>
  .scanlines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.005) 2px,
      rgba(255, 255, 255, 0.005) 4px
    );
    pointer-events: none;
    opacity: 0.7;
  }

  .prose {
    --tw-prose-body: theme('colors.zinc.300');
    --tw-prose-headings: theme('colors.white');
    --tw-prose-lead: theme('colors.zinc.400');
    --tw-prose-links: theme('colors.emerald.400');
    --tw-prose-bold: theme('colors.white');
    --tw-prose-counters: theme('colors.zinc.400');
    --tw-prose-bullets: theme('colors.zinc.600');
    --tw-prose-hr: theme('colors.zinc.700');
    --tw-prose-quotes: theme('colors.zinc.300');
    --tw-prose-quote-borders: theme('colors.emerald.400');
    --tw-prose-captions: theme('colors.zinc.400');
    --tw-prose-code: theme('colors.emerald.300');
    --tw-prose-pre-code: theme('colors.zinc.200');
    --tw-prose-pre-bg: theme('colors.zinc.900');
    --tw-prose-th-borders: theme('colors.zinc.600');
    --tw-prose-td-borders: theme('colors.zinc.700');
  }

  .prose code {
    background: rgba(52, 211, 153, 0.1);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-weight: 600;
  }

  .prose pre {
    background: rgba(0, 0, 0, 0.5) !important;
    border: 1px solid rgba(113, 113, 122, 0.3);
  }

  .prose blockquote {
    border-left: 4px solid theme('colors.emerald.400');
    background: rgba(52, 211, 153, 0.05);
    padding: 1rem;
  }

  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Table of contents active state */
  .toc-link.active {
    color: theme('colors.emerald.400');
    font-weight: 600;
  }

  /* Smooth scroll for anchor links */
  html {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar */
  :global(::-webkit-scrollbar) {
    width: 8px;
  }

  :global(::-webkit-scrollbar-track) {
    background: rgba(0, 0, 0, 0.1);
  }

  :global(::-webkit-scrollbar-thumb) {
    background: rgba(52, 211, 153, 0.3);
    border-radius: 4px;
  }

  :global(::-webkit-scrollbar-thumb:hover) {
    background: rgba(52, 211, 153, 0.5);
  }

  /* Mobile optimizations */
  @media (max-width: 1024px) {
    aside {
      order: 2;
    }
    
    article {
      order: 1;
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .scanlines {
      display: none;
    }
    
    * {
      transition: none !important;
      animation: none !important;
    }
    
    html {
      scroll-behavior: auto;
    }
  }
</style>